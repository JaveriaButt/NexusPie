<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:Converters="clr-namespace:NPIE.Convertors"
                    xmlns:Control="clr-namespace:NPIE.Controls"  
                    xmlns:Controllers="clr-namespace:NPIE.Controller;assembly=Controller">

    
        <ResourceDictionary.MergedDictionaries>
            <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Light.xaml" />
            <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Defaults.xaml" />
            <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Primary/MaterialDesignColor.Blue.xaml" />
            <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Accent/MaterialDesignColor.LightBlue.xaml" />
        </ResourceDictionary.MergedDictionaries>



    <Controllers:HomeController x:Key="AppViewModel"/>
    <Converters:VisibilityConverter x:Key="ConvertBoolToVisibility"/>
    <Converters:StringToVisibilityConverter x:Key="ConvertStringToVisbility"/>
    <Converters:NullToVisibilityConverter x:Key="ConvertNullToVisbility"/>
    <Converters:NullToVisibilityReverseConverter x:Key="NullToVisibilityReverseConverter"/>


    <Style TargetType="{x:Type GroupBox}">
      <Setter Property="Background" Value="Transparent"/>
      <Setter Property="Template" >
        <Setter.Value>
            <ControlTemplate TargetType="{x:Type GroupBox}">
       
                <Border Canvas.ZIndex="2"
                                BorderBrush="Red"
                                BorderThickness="2"
                                CornerRadius="3"
                                HorizontalAlignment="Stretch"
                                Width="300"
                                Margin="-2,20,-3,-1"
                                Height="45"
                                Background="{Binding ElementName=HubGroupBox, Path=Background}">
                    <TextBlock Foreground="#016fc4" Padding="20" 
                                       FontWeight="SemiBold"
                                       HorizontalAlignment="Center" />
                </Border>
            
    
        </ControlTemplate>
        </Setter.Value>
        </Setter>
    </Style>
    
    <Style TargetType="{x:Type Button}" x:Key="ImageButton">
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border Background="White" Opacity="0.01"/>
                        <Border x:Name="border" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="5" Background="{TemplateBinding Background}">
                                  <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" Value="Transparent" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="0.25" />
                            <Setter Property="BorderBrush" Value="Transparent" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style TargetType="{x:Type Button}" x:Key="ImageButton1" BasedOn="{StaticResource {x:Static ToolBar.ButtonStyleKey}}">
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border"  Padding="0" BorderBrush="Red"  >
                        <ContentPresenter HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" Value="Transparent" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="0.25" />
                            <Setter Property="BorderBrush" Value="Transparent" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style TargetType="{x:Type Button}" x:Key="RoundedButton">
        <Setter Property="TextBlock.TextAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border CornerRadius="3,3,3,3"  BorderThickness="1,1,1,1" >
                        <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Control:NPButtons}" x:Key="OvalButton"> 
       <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Foreground" Value="{Binding Source={StaticResource AppViewModel},Path=ApplicationDesign.OvalButtonForeground, UpdateSourceTrigger=PropertyChanged}"/>
          <Setter Property="FontSize" Value="{Binding Source={StaticResource AppViewModel},Path=ApplicationDesign.OvalButtonFontSize, UpdateSourceTrigger=PropertyChanged}"/>
            <Setter Property="Template" >
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Control:NPButtons}">
                    <Border  x:Name="brdr" CornerRadius="12"  Height="{Binding Source={StaticResource AppViewModel},Path=ApplicationDesign.OvalButtonHeight, UpdateSourceTrigger=PropertyChanged}" Width="{Binding Source={StaticResource AppViewModel},Path=ApplicationDesign.OvalButtonWidth, UpdateSourceTrigger=PropertyChanged}" Background="{Binding Source={StaticResource AppViewModel},Path=ApplicationDesign.OvalButtonBackground, UpdateSourceTrigger=PropertyChanged}">
                        <TextBlock   FontWeight="SemiBold" Text="{Binding Path=ContentS,   RelativeSource={RelativeSource TemplatedParent}}"   VerticalAlignment="Center" TextWrapping="Wrap"  HorizontalAlignment="Center" />
                     </Border> 
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" Value="White" />
                            <Setter Property="BorderThickness" Value="2" />
                            <Setter TargetName="brdr" Property="Background" Value="{Binding Source={StaticResource AppViewModel},Path=ApplicationDesign.OvalButtonMouseOverbackground , UpdateSourceTrigger=PropertyChanged}" />
                            
                        </Trigger> 
                            
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{Binding Source={StaticResource AppViewModel},Path=ApplicationDesign.OvalButtonOnPress, UpdateSourceTrigger=PropertyChanged}" />
                        </Trigger> 
                        <Trigger Property="IsEnabled" Value="True">
                            <!--<Setter Property="Opacity" Value="0.25" />-->
                            <Setter Property="BorderBrush" Value="Transparent" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>
    
    <Style TargetType="{x:Type Control:NPButtons}" x:Key="ProductButton">
        <Setter Property="FontFamily" Value="{Binding Source={StaticResource AppViewModel},Path=ApplicationDesign.FontFamily, UpdateSourceTrigger=PropertyChanged}"/>
        <Setter Property="MaxWidth" Value="{Binding Source={StaticResource AppViewModel},Path=ApplicationDesign.ProductButtonWidth, UpdateSourceTrigger=PropertyChanged}"/>
        <Setter Property="MaxHeight" Value="{Binding Source={StaticResource AppViewModel},Path=ApplicationDesign.ProductButtonHeight, UpdateSourceTrigger=PropertyChanged}"/>
        <Setter Property="Background" Value="{Binding Source={StaticResource AppViewModel},Path=ApplicationDesign.Productbackground, UpdateSourceTrigger=PropertyChanged}"/> 
        <Setter Property="Cursor" Value="Hand"/> 
        <Setter Property="FontSize" Value="12"/>    
        <Setter Property="Template" >
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Control:NPButtons}"> 
                    <Border x:Name="bd" BorderThickness="{Binding Source={StaticResource AppViewModel},Path=ApplicationDesign.ProductBorderThickness,UpdateSourceTrigger=PropertyChanged}" BorderBrush="{Binding Source={StaticResource AppViewModel},Path=ApplicationDesign.ProductBorderColor,UpdateSourceTrigger=PropertyChanged}" CornerRadius="15"  Width="{TemplateBinding MaxWidth}" Height="{TemplateBinding MaxHeight}" Background="{TemplateBinding Background}">
                         <Grid Margin="08,02">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>   
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <TextBlock   Text="{Binding Path=ContentS,   RelativeSource={RelativeSource TemplatedParent}}"   VerticalAlignment="Top" TextWrapping="Wrap"      FontSize="{Binding Source={StaticResource AppViewModel},Path=ApplicationDesign.ProductNameFontSize,UpdateSourceTrigger=PropertyChanged}" Foreground="{Binding Source={StaticResource AppViewModel},Path=ApplicationDesign.ProductNameForeground,UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Left" FontWeight="SemiBold"   Grid.Row="0" FontFamily="{TemplateBinding FontFamily}"/>
                             <Grid Grid.Row="1">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <TextBlock   Text="{Binding  Path=ItemCode, RelativeSource={RelativeSource TemplatedParent}}" VerticalAlignment="Top" HorizontalAlignment="Left"  FontSize="{Binding Source={StaticResource AppViewModel},Path=ApplicationDesign.ProductCodeFontSize,UpdateSourceTrigger=PropertyChanged}" Foreground="{Binding Source={StaticResource AppViewModel},Path=ApplicationDesign.ProductCodeForeground,UpdateSourceTrigger=PropertyChanged}"  Grid.Column="0" FontFamily="{TemplateBinding FontFamily}"/>
                                <TextBlock   Text="{Binding  Path=Price, RelativeSource={RelativeSource TemplatedParent}}" FontWeight="SemiBold"   VerticalAlignment="Bottom"    HorizontalAlignment="Left"  FontSize="{Binding Source={StaticResource AppViewModel},Path=ApplicationDesign.ProductPriceFontSize,UpdateSourceTrigger=PropertyChanged}" Foreground="{Binding Source={StaticResource AppViewModel},Path=ApplicationDesign.ProductPriceForeground,UpdateSourceTrigger=PropertyChanged}"  Grid.Column="0" FontFamily="{TemplateBinding FontFamily}"/>
                                <Image       Source="{Binding Path=Icon, RelativeSource={RelativeSource TemplatedParent}}"  MaxHeight="80" MaxWidth="80" Margin="2" Grid.Column="1" Name="btnBackImg1" />
                            </Grid> 
                        </Grid> 
                    </Border> 
                    <ControlTemplate.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">  
                            <Setter Property="BorderBrush" Value="White" />
                            <Setter Property="BorderThickness" Value="2" />
                            <Setter Property="Background"  Value="{Binding Source={StaticResource AppViewModel},Path=ApplicationDesign.ProductMouseOverbackground ,UpdateSourceTrigger=PropertyChanged}" />
                        </Trigger>
                    <Trigger Property="IsPressed" Value="True">
                            <Setter  TargetName="bd" Property="Background"  Value="{Binding Source={StaticResource AppViewModel},Path=ApplicationDesign.ProductOnPressbackground,UpdateSourceTrigger=PropertyChanged}"/>
                     </Trigger> 
                    <Trigger Property="IsEnabled" Value="false">
                        <Setter Property="Opacity" Value="0.25" />
                        <Setter Property="BorderBrush" Value="Transparent" />
                    </Trigger>
                </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value> 
        </Setter>

    </Style> 


</ResourceDictionary>